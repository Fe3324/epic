# Script para configurar Git na aplica√ß√£o Epic
# Uso: .\setup-git.ps1

Write-Host "üîß === CONFIGURA√á√ÉO GIT PARA APLICA√á√ÉO EPIC ===" -ForegroundColor Green
Write-Host ""

# Vari√°veis
$repoUrl = "https://github.com/Fe3324/epic.git"
$gitPath = "C:\Program Files\Git\bin"

# 1. Verificar se Git est√° instalado
Write-Host "üîç 1. VERIFICANDO INSTALA√á√ÉO DO GIT..." -ForegroundColor Yellow
try {
    if (Test-Path $gitPath) {
        $env:PATH += ";$gitPath"
        $gitVersion = git --version
        Write-Host "‚úÖ Git encontrado: $gitVersion" -ForegroundColor Green
    } else {
        throw "Git n√£o encontrado"
    }
} catch {
    Write-Host "‚ùå Git n√£o instalado. Instalando..." -ForegroundColor Red
    try {
        winget install --id Git.Git -e --source winget
        $env:PATH += ";$gitPath"
        Write-Host "‚úÖ Git instalado com sucesso!" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå Erro ao instalar Git. Instale manualmente." -ForegroundColor Red
        exit 1
    }
}

Write-Host ""

# 2. Verificar se j√° √© um reposit√≥rio Git
Write-Host "üìÅ 2. VERIFICANDO STATUS DO REPOSIT√ìRIO..." -ForegroundColor Yellow
if (Test-Path ".git") {
    Write-Host "‚úÖ Reposit√≥rio Git j√° inicializado" -ForegroundColor Green
    
    # Verificar remote
    try {
        $remote = git remote get-url origin
        if ($remote -eq $repoUrl) {
            Write-Host "‚úÖ Remote configurado corretamente: $remote" -ForegroundColor Green
        } else {
            Write-Host "‚ö†Ô∏è Remote diferente: $remote" -ForegroundColor Yellow
            Write-Host "Atualizando remote..." -ForegroundColor Yellow
            git remote set-url origin $repoUrl
            Write-Host "‚úÖ Remote atualizado!" -ForegroundColor Green
        }
    } catch {
        Write-Host "‚ö†Ô∏è Adicionando remote..." -ForegroundColor Yellow
        git remote add origin $repoUrl
        Write-Host "‚úÖ Remote adicionado!" -ForegroundColor Green
    }
} else {
    Write-Host "‚ö†Ô∏è Inicializando reposit√≥rio Git..." -ForegroundColor Yellow
    git init
    git remote add origin $repoUrl
    Write-Host "‚úÖ Reposit√≥rio inicializado!" -ForegroundColor Green
}

Write-Host ""

# 3. Configurar usu√°rio Git
Write-Host "üë§ 3. CONFIGURANDO USU√ÅRIO GIT..." -ForegroundColor Yellow
$currentUser = git config user.name
$currentEmail = git config user.email

if (-not $currentUser) {
    $userName = Read-Host "Digite seu nome"
    git config user.name $userName
    Write-Host "‚úÖ Nome configurado: $userName" -ForegroundColor Green
} else {
    Write-Host "‚úÖ Nome j√° configurado: $currentUser" -ForegroundColor Green
}

if (-not $currentEmail) {
    $userEmail = Read-Host "Digite seu email"
    git config user.email $userEmail
    Write-Host "‚úÖ Email configurado: $userEmail" -ForegroundColor Green
} else {
    Write-Host "‚úÖ Email j√° configurado: $currentEmail" -ForegroundColor Green
}

Write-Host ""

# 4. Verificar status dos arquivos
Write-Host "üìã 4. VERIFICANDO STATUS DOS ARQUIVOS..." -ForegroundColor Yellow
$status = git status --porcelain
if ($status) {
    Write-Host "‚ö†Ô∏è Arquivos n√£o commitados encontrados:" -ForegroundColor Yellow
    git status --short
    
    $commit = Read-Host "Deseja adicionar e committar todos os arquivos? (s/n)"
    if ($commit -eq "s" -or $commit -eq "S") {
        git add .
        $commitMessage = Read-Host "Digite a mensagem do commit"
        git commit -m $commitMessage
        Write-Host "‚úÖ Commit realizado!" -ForegroundColor Green
        
        $push = Read-Host "Deseja fazer push para o GitHub? (s/n)"
        if ($push -eq "s" -or $push -eq "S") {
            git push origin main
            Write-Host "‚úÖ Push realizado!" -ForegroundColor Green
        }
    }
} else {
    Write-Host "‚úÖ Working tree limpo - nada para committar" -ForegroundColor Green
}

Write-Host ""

# 5. Verificar sincroniza√ß√£o com remote
Write-Host "üîÑ 5. VERIFICANDO SINCRONIZA√á√ÉO..." -ForegroundColor Yellow
try {
    git fetch origin
    $behind = git rev-list HEAD..origin/main --count
    $ahead = git rev-list origin/main..HEAD --count
    
    if ($behind -gt 0) {
        Write-Host "‚ö†Ô∏è Seu reposit√≥rio est√° $behind commits atr√°s do remote" -ForegroundColor Yellow
        $pull = Read-Host "Deseja fazer pull? (s/n)"
        if ($pull -eq "s" -or $pull -eq "S") {
            git pull origin main
            Write-Host "‚úÖ Pull realizado!" -ForegroundColor Green
        }
    } elseif ($ahead -gt 0) {
        Write-Host "‚ö†Ô∏è Seu reposit√≥rio est√° $ahead commits √† frente do remote" -ForegroundColor Yellow
        $push = Read-Host "Deseja fazer push? (s/n)"
        if ($push -eq "s" -or $push -eq "S") {
            git push origin main
            Write-Host "‚úÖ Push realizado!" -ForegroundColor Green
        }
    } else {
        Write-Host "‚úÖ Reposit√≥rio sincronizado com o remote" -ForegroundColor Green
    }
} catch {
    Write-Host "‚ö†Ô∏è N√£o foi poss√≠vel verificar sincroniza√ß√£o" -ForegroundColor Yellow
}

Write-Host ""

# 6. Mostrar informa√ß√µes finais
Write-Host "üìä 6. INFORMA√á√ïES DO REPOSIT√ìRIO:" -ForegroundColor Yellow
Write-Host "Repository URL: $repoUrl" -ForegroundColor White
Write-Host "Branch atual: $(git branch --show-current)" -ForegroundColor White
Write-Host "√öltimo commit: $(git log -1 --oneline)" -ForegroundColor White
Write-Host "Remote: $(git remote get-url origin)" -ForegroundColor White

Write-Host ""
Write-Host "üéâ === CONFIGURA√á√ÉO CONCLU√çDA ===" -ForegroundColor Green
Write-Host ""
Write-Host "üìã COMANDOS √öTEIS:" -ForegroundColor Yellow
Write-Host "git status              - Verificar status" -ForegroundColor Gray
Write-Host "git add .               - Adicionar arquivos" -ForegroundColor Gray
Write-Host "git commit -m 'msg'     - Fazer commit" -ForegroundColor Gray
Write-Host "git push origin main    - Enviar para GitHub" -ForegroundColor Gray
Write-Host "git pull origin main    - Baixar do GitHub" -ForegroundColor Gray
Write-Host "git log --oneline       - Ver hist√≥rico" -ForegroundColor Gray
Write-Host ""
Write-Host "üîó Acesse o reposit√≥rio: $repoUrl" -ForegroundColor Cyan 